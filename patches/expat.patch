diff --git a/expat/CMakeLists.txt b/expat/CMakeLists.txt
index 504d087a..46359bf2 100644
--- a/expat/CMakeLists.txt
+++ b/expat/CMakeLists.txt
@@ -1,9 +1,15 @@
 # This file is copyrighted under the BSD-license for buildsystem files of KDE
 # copyright 2010, Patrick Spendrin <ps_ml@gmx.de>
 
+cmake_minimum_required(VERSION 2.6...3.21)
 project(expat)
 
-cmake_minimum_required(VERSION 2.6)
+include(flags OPTIONAL)
+include(GNUInstallDirs)
+if(DEFINED XP_NAMESPACE)
+  set(XP_OPT_INSTALL EXCLUDE_FROM_ALL)
+  set(nameSpace NAMESPACE ${XP_NAMESPACE}::)
+endif()
 set(PACKAGE_BUGREPORT "expat-bugs@libexpat.org")
 set(PACKAGE_NAME "expat")
 set(PACKAGE_VERSION "2.2.5")
@@ -82,9 +88,9 @@ include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/lib)
 if(MSVC)
     add_definitions(-D_CRT_SECURE_NO_WARNINGS -wd4996)
 endif(MSVC)
-if(WIN32)
+if(WIN32 AND NOT DEFINED CMAKE_DEBUG_POSTFIX)
     set(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "Add a suffix, usually d on Windows")
-endif(WIN32)
+endif()
 
 set(expat_SRCS
     lib/loadlibrary.c
@@ -111,6 +117,12 @@ add_library(expat ${_SHARED} ${expat_SRCS})
 if(USE_libbsd)
     target_link_libraries(expat ${LIB_BSD})
 endif()
+if(NOT BUILD_shared)
+  if(WIN32)
+    target_compile_definitions(expat PUBLIC $<INSTALL_INTERFACE:XML_STATIC>)
+  endif()
+endif()
+target_include_directories(expat PUBLIC $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
 
 set(LIBCURRENT 7)   # sync
 set(LIBREVISION 7)  # with
@@ -129,9 +141,11 @@ macro(expat_install)
     endif()
 endmacro()
 
-expat_install(TARGETS expat RUNTIME DESTINATION bin
-                      LIBRARY DESTINATION lib
-                      ARCHIVE DESTINATION lib)
+set(targetsFile ${PROJECT_NAME}-targets)
+expat_install(TARGETS expat EXPORT ${targetsFile} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+                      LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+                      ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+expat_install(EXPORT ${targetsFile} DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake ${nameSpace})
 
 set(prefix ${CMAKE_INSTALL_PREFIX})
 set(exec_prefix "\${prefix}/bin")
@@ -139,8 +153,8 @@ set(libdir "\${prefix}/lib")
 set(includedir "\${prefix}/include")
 configure_file(expat.pc.in ${CMAKE_CURRENT_BINARY_DIR}/expat.pc)
 
-expat_install(FILES lib/expat.h lib/expat_external.h DESTINATION include)
-expat_install(FILES ${CMAKE_CURRENT_BINARY_DIR}/expat.pc DESTINATION lib/pkgconfig)
+expat_install(FILES lib/expat.h lib/expat_external.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+expat_install(FILES ${CMAKE_CURRENT_BINARY_DIR}/expat.pc ${XP_OPT_INSTALL} DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 
 if(BUILD_tools)
     set(xmlwf_SRCS
@@ -153,10 +167,10 @@ if(BUILD_tools)
     add_executable(xmlwf ${xmlwf_SRCS})
     set_property(TARGET xmlwf PROPERTY RUNTIME_OUTPUT_DIRECTORY xmlwf)
     target_link_libraries(xmlwf expat)
-    expat_install(TARGETS xmlwf DESTINATION bin)
+    expat_install(TARGETS xmlwf ${XP_OPT_INSTALL} DESTINATION ${CMAKE_INSTALL_BINDIR})
     if(BUILD_doc)
         add_custom_command(TARGET expat PRE_BUILD COMMAND "${DOCBOOK_TO_MAN}" "${PROJECT_SOURCE_DIR}/doc/xmlwf.xml" && mv "XMLWF.1" "${PROJECT_SOURCE_DIR}/doc/xmlwf.1")
-        expat_install(FILES "${PROJECT_SOURCE_DIR}/doc/xmlwf.1" DESTINATION share/man/man1)
+        expat_install(FILES "${PROJECT_SOURCE_DIR}/doc/xmlwf.1" ${XP_OPT_INSTALL} DESTINATION ${CMAKE_INSTALL_DATADIR}/man/man1)
     endif()
 endif()
 
