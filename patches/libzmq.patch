diff --git a/CMakeLists.txt b/CMakeLists.txt
index dd3d8eb9..2de767a1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,6 +20,7 @@ include(FindThreads)
 include(GNUInstallDirs)
 include(CheckTypeSize)
 include(CMakePackageConfigHelpers)
+include(flags OPTIONAL)
 
 list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_SOURCE_DIR}")
 set(ZMQ_CMAKE_MODULES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/builds/cmake/Modules)
@@ -262,20 +263,32 @@ option(ENABLE_CURVE "Enable CURVE security" ON)
 
 if(ENABLE_CURVE)
   if(WITH_LIBSODIUM)
-    find_package("Sodium")
-    if(SODIUM_FOUND)
+    if(COMMAND xpFindPkg)
+      set(XP_MODULE_PATH ${CMAKE_MODULE_PATH})
+      xpFindPkg(PKGS sodium)
       message(STATUS "Using libsodium for CURVE security")
+      get_target_property(SODIUM_INCLUDE_DIRS xpro::sodium INTERFACE_INCLUDE_DIRECTORIES)
+      get_target_property(SODIUM_DEFS xpro::sodium INTERFACE_COMPILE_DEFINITIONS)
       include_directories(${SODIUM_INCLUDE_DIRS})
-      if(WITH_LIBSODIUM_STATIC)
-        add_compile_definitions(SODIUM_STATIC)
-      endif()
+      add_compile_definitions(${SODIUM_DEFS})
       set(ZMQ_USE_LIBSODIUM 1)
       set(ZMQ_HAVE_CURVE 1)
     else()
-      message(
-        WARNING
-          "libsodium not installed, instead using builtin tweetnacl, you may want to install libsodium and run cmake again"
-      )
+      find_package("Sodium")
+      if(SODIUM_FOUND)
+        message(STATUS "Using libsodium for CURVE security")
+        include_directories(${SODIUM_INCLUDE_DIRS})
+        if(WITH_LIBSODIUM_STATIC)
+          add_compile_definitions(SODIUM_STATIC)
+        endif()
+        set(ZMQ_USE_LIBSODIUM 1)
+        set(ZMQ_HAVE_CURVE 1)
+      else()
+        message(
+          WARNING
+            "libsodium not installed, instead using builtin tweetnacl, you may want to install libsodium and run cmake again"
+        )
+      endif()
     endif()
   endif()
   if(NOT ZMQ_HAVE_CURVE)
@@ -1224,7 +1237,22 @@ set(VERSION ${ZMQ_VERSION_MAJOR}.${ZMQ_VERSION_MINOR}.${ZMQ_VERSION_PATCH})
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/src/libzmq.pc.in ${CMAKE_CURRENT_BINARY_DIR}/libzmq.pc @ONLY)
 set(zmq-pkgconfig ${CMAKE_CURRENT_BINARY_DIR}/libzmq.pc)
 
-if(NOT ZMQ_BUILD_FRAMEWORK)
+if(DEFINED LIBZMQ_VER)
+  if(NOT LIBZMQ_VER STREQUAL ZMQ_VERSION)
+    message(AUTHOR_WARNING "version passed in (${LIBZMQ_VER}) doesn't match internal version (${ZMQ_VERSION})")
+  endif()
+  if(NOT MSVC)
+    set(ZMQ_OUTPUT_BASENAME ${ZMQ_OUTPUT_BASENAME}_${ZMQ_VERSION})
+  endif()
+endif()
+if(DEFINED XP_NAMESPACE)
+  set(nSpace ${XP_NAMESPACE}::)
+  set(nameSpace NAMESPACE ${nSpace})
+endif()
+
+option(INSTALL_PKGCONFIG "pkgconfig install" ON)
+mark_as_advanced(INSTALL_PKGCONFIG)
+if(NOT ZMQ_BUILD_FRAMEWORK AND INSTALL_PKGCONFIG)
   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libzmq.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 endif()
 
@@ -1350,7 +1378,8 @@ else()
     set_property(TARGET objects PROPERTY POSITION_INDEPENDENT_CODE ON)
     target_include_directories(
       objects PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
-                     $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> $<INSTALL_INTERFACE:include>)
+                     $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>
+                     $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
   endif()
 
   if(BUILD_SHARED)
@@ -1422,7 +1451,8 @@ endif()
 foreach(target ${target_outputs})
   target_include_directories(
     ${target} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
-                     $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> $<INSTALL_INTERFACE:include>)
+                     $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>
+                     $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
 endforeach()
 
 if(BUILD_SHARED)
@@ -1688,7 +1718,7 @@ write_basic_package_version_file(
 if(BUILD_SHARED OR BUILD_STATIC)
   install(
     EXPORT ${PROJECT_NAME}-targets
-    FILE ${PROJECT_NAME}Targets.cmake
+    FILE ${PROJECT_NAME}Targets.cmake ${nameSpace}
     DESTINATION ${ZEROMQ_CMAKECONFIG_INSTALL_DIR})
   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
                 ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
diff --git a/builds/cmake/Modules/FindSodium.cmake b/builds/cmake/Modules/FindSodium.cmake
index 9ec36d1d..88f41315 100644
--- a/builds/cmake/Modules/FindSodium.cmake
+++ b/builds/cmake/Modules/FindSodium.cmake
@@ -39,7 +39,7 @@ find_library(
 )
 
 include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(sodium DEFAULT_MSG SODIUM_LIBRARIES SODIUM_INCLUDE_DIRS)
+find_package_handle_standard_args(Sodium DEFAULT_MSG SODIUM_LIBRARIES SODIUM_INCLUDE_DIRS)
 mark_as_advanced(SODIUM_FOUND SODIUM_LIBRARIES SODIUM_INCLUDE_DIRS)
 
 ################################################################################
diff --git a/builds/cmake/ZeroMQConfig.cmake.in b/builds/cmake/ZeroMQConfig.cmake.in
index 3f16e595..bae7e24f 100644
--- a/builds/cmake/ZeroMQConfig.cmake.in
+++ b/builds/cmake/ZeroMQConfig.cmake.in
@@ -4,8 +4,8 @@
 #
 # ::
 #
-#   libzmq-static
-#   libzmq
+#   @nSpace@libzmq-static
+#   @nSpace@libzmq
 #
 # This module sets the following variables in your project::
 #
@@ -16,19 +16,19 @@
 
 @PACKAGE_INIT@
 
-if(NOT TARGET libzmq AND NOT TARGET libzmq-static)
+if(NOT TARGET @nSpace@libzmq AND NOT TARGET @nSpace@libzmq-static)
   include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
 
-  if (TARGET libzmq)
-    get_target_property(@PROJECT_NAME@_INCLUDE_DIR libzmq INTERFACE_INCLUDE_DIRECTORIES)
+  if (TARGET @nSpace@libzmq)
+    get_target_property(@PROJECT_NAME@_INCLUDE_DIR @nSpace@libzmq INTERFACE_INCLUDE_DIRECTORIES)
   else ()
-    get_target_property(@PROJECT_NAME@_INCLUDE_DIR libzmq-static INTERFACE_INCLUDE_DIRECTORIES)
+    get_target_property(@PROJECT_NAME@_INCLUDE_DIR @nSpace@libzmq-static INTERFACE_INCLUDE_DIRECTORIES)
   endif()
 
-  if (TARGET libzmq)
-    get_target_property(@PROJECT_NAME@_LIBRARY libzmq LOCATION)
+  if (TARGET @nSpace@libzmq)
+    get_target_property(@PROJECT_NAME@_LIBRARY @nSpace@libzmq LOCATION)
   endif()
-  if (TARGET libzmq-static)
-    get_target_property(@PROJECT_NAME@_STATIC_LIBRARY libzmq-static LOCATION)
+  if (TARGET @nSpace@libzmq-static)
+    get_target_property(@PROJECT_NAME@_STATIC_LIBRARY @nSpace@libzmq-static LOCATION)
   endif()
 endif()
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index 08056143..bf0593f7 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -234,7 +234,10 @@ endif()
 foreach(test ${tests})
   # target_sources not supported before CMake 3.1
   if(ZMQ_HAVE_CURVE AND ${test} MATCHES test_security_curve)
-    add_executable(${test} ${test}.cpp "../src/tweetnacl.c" "../src/err.cpp" "../src/random.cpp" "../src/clock.cpp")
+    if(NOT SODIUM_FOUND)
+      set(tweetnacl_src "../src/tweetnacl.c")
+    endif()
+    add_executable(${test} ${test}.cpp ${tweetnacl_src} "../src/err.cpp" "../src/random.cpp" "../src/clock.cpp")
   else()
     add_executable(${test} ${test}.cpp)
   endif()
